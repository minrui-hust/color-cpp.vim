Log file created at: 2019/04/02 15:13:27
Running on machine: mr-pc
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0402 15:13:27.491542  4149 json_parser.cpp:18] 
[
	1,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/NERD_tree_1",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "\" Press ? for help\n\n.. (up a dir)\n/home/mr/.vim/bundle/color-cpp/server/\n+ \u0007build/\n+ \u0007ClangAnalyzer/\n+ \u0007log/\n  \u0007CMakeLists.txt\n  \u0007json_parser.cpp\n  \u0007json_parser.h\n  \u0007server\u0007*\n  \u0007server.cpp\n  \u0007syntax_analyzer.cpp\n  \u0007syntax_analyzer.h\n  \u0007test.cpp\n  \u0007tmp\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/NERD_tree_1"
		}
	}
]
I0402 15:14:14.619489  4149 json_parser.cpp:18] 
[
	2,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/server.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include <fcntl.h>\n#include <fstream>\n#include <iostream>\n#include <memory>\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/stat.h>\n#include <sys/types.h>\n#include <unistd.h>\n\n#include \"json/json.h\"\n#include \"glog/logging.h\"\n\n#include \"json_parser.h\"\n#include \"syntax_analyzer.h\"\n\nconstexpr int kStdinBufferSize = 1024 * 10; // 10K\n\nvoid setupGlog(char** argv){\n  google::InitGoogleLogging(argv[0]);  \n  google::SetLogDestination(google::GLOG_INFO, \"/home/mr/.vim/bundle/color-cpp/server/log/\");\n}\n\nint main(int argc, char**argv) {\n  setupGlog(argv);\n\n  char *stdin_buf = new char[kStdinBufferSize+1];\n  size_t stdin_read_size;\n  JsonParser parser;\n  SyntaxAnalyzer analyzer;\n  std::shared_ptr<std::string> response;\n\n  while (true) {\n    stdin_read_size = read(STDIN_FILENO, stdin_buf, kStdinBufferSize);\n    if (stdin_read_size > 0) {\n      auto json_value = parser.parse(stdin_buf, stdin_read_size);\n      if(json_value){\n        analyzer.processRequest(*json_value);\n      }\n    }\n  }\n\n  return 0;\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/server.cpp"
		}
	}
]
