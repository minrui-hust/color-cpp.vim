Log file created at: 2019/04/02 15:38:37
Running on machine: mr-pc
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0402 15:38:37.636101  5135 json_parser.cpp:18] 
[
	1,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:38:37.982641  5135 json_parser.cpp:18] 
[
	2,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:39:22.159693  5135 json_parser.cpp:18] 
[
	3,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:39:22.226222  5135 json_parser.cpp:18] 
[
	4,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:39:26.984652  5135 json_parser.cpp:18] 
[
	5,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:39:26.995558  5135 json_parser.cpp:18] 
[
	6,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:39:29.224323  5135 json_parser.cpp:18] 
[
	7,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:39:29.235981  5135 json_parser.cpp:18] 
[
	8,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:14.722110  5135 json_parser.cpp:18] 
[
	9,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:17.391748  5135 json_parser.cpp:18] 
[
	10,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:17.402633  5135 json_parser.cpp:18] 
[
	11,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:17.413437  5135 json_parser.cpp:18] 
[
	12,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:17.437446  5135 json_parser.cpp:18] 
[
	13,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:17.802785  5135 json_parser.cpp:18] 
[
	14,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:21.113451  5135 json_parser.cpp:18] 
[
	15,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:21.181040  5135 json_parser.cpp:18] 
[
	16,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:22.435007  5135 json_parser.cpp:18] 
[
	17,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:22.501277  5135 json_parser.cpp:18] 
[
	18,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:26.637421  5135 json_parser.cpp:18] 
[
	19,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:26.651162  5135 json_parser.cpp:18] 
[
	20,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:29.849011  5135 json_parser.cpp:18] 
[
	21,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:29.914980  5135 json_parser.cpp:18] 
[
	22,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:33.011817  5135 json_parser.cpp:18] 
[
	23,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:33.075881  5135 json_parser.cpp:18] 
[
	24,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
I0402 15:40:37.324542  5135 json_parser.cpp:18] 
[
	25,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:37.390651  5135 json_parser.cpp:18] 
[
	26,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#pragma once\n#include <memory>\n#include \"json/json.h\"\n\nclass JsonParser{\n  public:\n    JsonParser();\n    std::shared_ptr<Json::Value> parse(const char* data, int size);\n\n  private:\n    std::unique_ptr<Json::CharReader> reader_;\n    std::unique_ptr<Json::StreamWriter> writer_;\n};\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.h"
		}
	}
]
I0402 15:40:44.985956  5135 json_parser.cpp:18] 
[
	27,
	{
		"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp",
		"flags" : 
		[
			"-x",
			"c++",
			"-std=c++14",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_includes",
			"-I/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/llvm/include",
			"-I/usr/local/include",
			"-I/usr/include/c++/5",
			"-I/usr/include",
			"-resource-dir=/home/mr/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/clang/lib/clang/7.0.0",
			"-fspell-checking"
		],
		"unsaved" : 
		{
			"content" : "#include \"json_parser.h\"\n#include <sstream>\n#include \"glog/logging.h\"\n\nJsonParser::JsonParser(){\n  Json::CharReaderBuilder reader_builder;\n  Json::StreamWriterBuilder writer_builder;\n  reader_ = std::unique_ptr<Json::CharReader>(reader_builder.newCharReader());\n  writer_ = std::unique_ptr<Json::StreamWriter>(writer_builder.newStreamWriter());\n}\n\nstd::shared_ptr<Json::Value> JsonParser::parse(const char* data, int size){\n  std::shared_ptr<Json::Value> value = std::make_shared<Json::Value>();\n\n  if(reader_->parse(data, data+size-1, value.get(), nullptr)){\n    std::ostringstream ss;\n    writer_->write(*value, &ss);\n    LOG(INFO)<<\"\\n\"<<ss.str();\n\n    return value;\n  }else{\n    return nullptr;\n  }\n}\n",
			"filename" : "/home/mr/.vim/bundle/color-cpp/server/json_parser.cpp"
		}
	}
]
